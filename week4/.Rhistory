library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
debug(sum)
n
1
2
3
4
c
debug(sum)
n
n
a
2
5
source('C:/Users/CASA/DataScience/Proyectos/Coursera/week2/pollutantmean.R')
debug(pollutantmean)
n
d
1
3
debug(pollutantmean,2)
b
a
d
h
4
5
67
3
d
d
c
q
c
c
a
3
g
3
dfasd
er
source('C:/Users/CASA/DataScience/Proyectos/Coursera/week2/pollutantmean.R')
debug(pollutantmean)
pollutantmean(4)
c
debug(ls)
ls
librarc
q
q
q
q
exit
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
Q
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
Q
q
Q
Q
Q
Q
Q
Q
c
exit
a
a
nf
f
f
f
f
f
f
f
f
f
f
f
f
f
setwd("C:/Users/CASA/DataScience/Proyectos/Course/rprogram")
setwd("C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4")
disease <- 11
datos <- read.csv("outcome-of-care-measures.csv", colClasses = "character")[c(2,7,disease)]
colnames(datos) <- c("Hospital", "State", "Rate")
datos[,3]<- suppressWarnings(as.numeric(datos[,3]))
#order
datos <- datos[order(datos[,1]),]
datos <- datos[order(datos[,3], decreasing = TRUE),]
datos <- datos[order(datos[,2]),]
#assign ranking+
ranking <- NULL
rankk <- 1
edo <- datos[1,2]
for (i in 1:nrow(datos)){
#when state change
if (datos[i,2] != edo){
rankk<- 1
edo <- datos[i,2]
}
#creating vector
if(is.na(datos[i,3])){
ranking[i]= NA
} else {
ranking[i] <- rankk
rankk = rankk+1
}
}
datos["Rank"] <- ranking
head(datos,50)
grupos <- split(datos$State, datos$Hospital)
class(grupos)
names(grupos)
str(grupos)
grupos <- split(datos$Hospital,datos$State)
grupos
grupos[,20]
grupos[1,1]
grupos[1]
grupos[2]
grupos[1:2]
list(grupos)
lapply(grupos, function(x) b[x,])
grupos[1:2,1]
grupos[1][1]
grupos[[1]][1]
grupos[[]][1]
grupos[[]][1]
NoEdos <- sum(names(grupos))
dim(grupos)
list(grupos)
levels(grupos)
str(grupos)
list(grupos)
summary(grupos)
length(grupos)
grupos[[1:length(grupos)]][1]
grupos[[seq_along(length(grupos))]][1]
grupos[[1:2]][1]
grupos[[1]][1]
grupos[[c(1,2)]][1]
grupos[[c(1,2)]][2]
grupos[[1]][2]
grupos[[1]][1]
grupos[[1]][1:2]
grupos[1][1:2]
grupos[1:2][1]
grupos[1:2][2]
grupos[1][1:2]
grupos[1][1]
grupos[1][2]
grupos[1][3]
grupos$AK
grupos$AK[1]
grupos$AK[2]
grupos$AK[1:2]
grupos$AK[1:4]
grupos$AK[20]
grupos[1][20]
grupos[[1]][20]
grupos[[1]][1]
grupos[[1]][2]
grupos[[2]][2]
grupos[[1:2]][2]
grupos[[1:2]][1]
grupos[[c(1,2)]][1]
grupos[c(1,2)][1]
sapply(grupos, grupos[[]][20])
lapply(c(1:20), mean)
sapply(grupos, grupos[[1]][20])
sapply(grupos, function(x) grupos[[1]][20])
sapply(grupos, function(x) grupos[[]][20])
sapply(grupos, function(x) grupos[[x]][20])
sapply(grupos, function(x) grupos[[2]][20])
sapply(grupos, function(x) grupos[[3]][20])
sapply(grupos, function(x) grupos[[1]][1])
sapply(grupos, function(seq_along(length(grupos))) grupos[[x]][1])
sapply(grupos, function(x = 1:length(grupos))) grupos[[x]][1])
sapply(grupos, function(x = 1:length(grupos)) grupos[[x]][1])
sapply(grupos, function(x) grupos[1])
sapply(grupos, function(x) grupos[x])
sapply(grupos, function(x = 1:2) grupos[x])
sapply(grupos, function() grupos[[1]][1])
tapply(grupos, function() grupos[[1]][1])
mapply(grupos, function() grupos[[1]][1])
tapply(grupos, function() grupos[[1]][1])
lapply(grupos, function() grupos[[1]][1])
grupos[[1]]
grupos[[1]][10]
grupos[[2]][10]
a<- function(){grupos[[x]][20]}
a
a<- function(x=1:20){grupos[[x]][20]}
a
eval((a))
grupos[[]][20]
grupos[20]
grupos[[c(AL, AK)]][1]
grupos[[c("AL", "AK")]][1]
grupos[[c(1:2)]][1]
V<- C(1,2)
V<- c(1:2)
grupos[[v]][1]
grupos[[V]][1]
grupos[V][1]
disease <- 11
datos <- read.csv("outcome-of-care-measures.csv", colClasses = "character")[c(2,7,disease)]
colnames(datos) <- c("Hospital", "State", "Rate")
datos[,3]<- suppressWarnings(as.numeric(datos[,3]))
#order
datos <- datos[order(datos[,1]),]
datos <- datos[order(datos[,3], decreasing = TRUE),]
datos <- datos[order(datos[,2]),]
#assign ranking+
ranking <- NULL
rankk <- 1
edo <- datos[1,2]
for (i in 1:nrow(datos)){
#when state change
if (datos[i,2] != edo){
rankk<- 1
edo <- datos[i,2]
}
#creating vector
if(is.na(datos[i,3])){
ranking[i]= NA
} else {
ranking[i] <- rankk
rankk = rankk+1
}
}
datos["Rank"] <- ranking
head(datos,50)
best <- split(datos$State, datos$Hospital)
length(best)
best
best <- split(datos$Hospital, datos$State)
length(best)
head(datos,50)
tapply(datos, datos$State, datos[,1])
unlist(datos)
prueba <- unlist(grupos)
str(datos)
unlist(best)
prueba <- unlist
prueba <- unlist(best)
head(prueba)
names(best)
best2 <- split(datos, datos$State)
head(best2)
nombres <- names(best2)
data.frame(best,nombres,row.names = nombres)
head(best)
sinlista <- unlist(best)
head(sinlista)
nombres
data.frame(hospital=sinlista, state=nombres, row.names = nombres)
best2[2]
best2[1]
best2[2][1]
best2[1][1]
best2[[1]][1]
best2[1,1]
best2[1,1,1]
best2[1][1]
best2[1][2]
best2[1][3]
best2[[1][1]
best2[[1]][1]
best2[[1]][2]
best2[[1]][,1]
best2[[1]][1,]
best2[[1]][1,1]
best2[["AK"]][1,1]
best2[["AK"]][1,20]
best2[["AK"]][1,2]
best2[["AK"]][2,1]
best2[["AK"]]C([2,1],[3,1]
best2[["AK"]]c([2,1],[3,1])
best2[["AK"]][2:3,1]
best2[["AK"]][2,1:2]
best2[[1]][2,1:2]
best2[[1]][1,1:2]
best2[[1:2]][1,1:2]
class(best2)
lapply(best2, function(x = 1:length(best2) [[x]][1:2]))
lapply(best2, function(x = 1:length(best2) [[x]][1:2])
lapply(best2, function(x = 1:length(best2) [[x]][1:2]))
lapply(best2, function(x = 1:length(best2)) [[x]][1:2]))
lapply(best2, function(x = 1:length(best2)) best2[[x]][1:2]))
lapply(best2, function(x = 1:length(best2)) [[x]][1:2]))
best2[[1:2]][1,1:2]
best2[[1:2,]][1,1:2]
best2[[,1:2]][1,1:2]
best2[[x]][1,1:2]
best2[[state]][1,1:2]
best2[[best2.state]][1,1:2]
best2[[names(best2)]][1,1:2]
estados <- names(best2)
estados
best2[[estados]][1,1:2]
best2[[best2[state]]][1,1:2]
best2[[best2$AK][1,1:2]
best2[[best2$AK][1,1:2]
best2[[best2$AK]][1,1:2]
debugSource('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
rankall("heart attack", 20)
best2
i=1
result[i]<- best2[[i]][1:2]
result <- NULL
result[i]<- best2[[i]][1:2]
best2[[i]][1:2]
sapply(best2, function(x){[[x]][1]})
sapply(best2, function(x){[[]][1]})
sapply(best2, function(x){[[1]][1]})
sapply(best2, function(x){x[[1]][1]})
sapply(best2, function(x){x[[1]][1:2]})
sapply(best2, function(x){x[[1]][1,1:2]})
best2[[1]][10,1:2]
sapply(best2, function(x){x[[1]][1,1:2]})
sapply(best2, function(x){x[[1]][1,1]})
sapply(best2, function(x){x[[1]][,1:2]})
sapply(best2, function(x){x[[1]][1:2]})
sapply(best2, function(x){x[[1]][20]})
i=20
sapply(best2, function(x){x[[1]][i]})
i=1
sapply(best2, function(x){x[[1]][i]})
sapply(best2, function(x){x[[1]][i,1:2]})
sapply(best2, function(x){data.frame(x[[1]][i,1:2]})
sapply(best2, function(x){data.frame(x[[1]][i]})
sapply(best2, function(x){data.frame(x[[1]][i])}
sapply(best2, function(x){data.frame(x[[1]][i])})
sapply(best2, function(x){(x[[1]][i])})
lapply(best2, function(x){(x[[1]][i])})
sapply(best2, function(x){(x[[1]][i])}, simplify = TRUE)
fin <- sapply(best2, function(x){(x[[1]][i])}, simplify = TRUE)
data.frame(fin,names(fin))
data.frame("Hopital" = fin,"State" = names(fin),)
data.frame(fin,names(fin),row.names = names(fin))
data.frame("State" =fin,names(fin))
data.frame("Hospital" =fin,"State" = names(fin))
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
tail(rankall("heart failure"), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
source('C:/Users/CASA/DataScience/Proyectos/Course/rprogram/week4/rankall.R')
q()
